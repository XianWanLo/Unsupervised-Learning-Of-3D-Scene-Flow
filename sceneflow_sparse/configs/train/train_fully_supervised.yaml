method: 
  backbone: 'ME' # Type of backbone network [ME]
  flow: True # Use scene-flow head
  ego_motion: False # Use ego-motion head
  semantic: False # Use background segmentation head
  clustering: False # Use foreground clustering head

misc:
  run_mode: train # Mode to run the network in

data:
  dataset: FlyingThings3D_ME # Name of the dataset [StereoKITTI_ME, FlyingThings3D_ME, SemanticKITTI_ME, LidarKITTI_ME, WaymoOpen_ME]
  root: ./data/flying_things_3d/ # Path to the data
  input_features: absolute_coords # Input features assigned to each sparse voxel
  remove_ground: False # Remove ground by simple thresholding of the height coordinate
  augment_data: False # Augment the data by random rotation and translation

network:
  normalize_features: True # If the feature for the correspondence computation should be normalized
  norm_type: IN # Type of normalization layer IN = instance, BN = batch normalization, False = no normalization
  in_kernel_size: 7 # Size of the initial convolutional kernel 
  feature_dim: 64
  use_pretrained: True # Flag for training
  pretrained_path: '' # Path to the pretrained model

loss: 
  background_loss: False # Compute background loss
  flow_loss: True # Compute flow loss
  ego_loss: False # Compute ego-motion loss
  foreground_loss: False # Compute foreground loss

metrics:
  flow: True # Compute evaluation metrics for flow estimation (EPE3D, Acc3DS, Acc3DR, Outliers)
  ego_motion: False # Compute evaluation metrics for ego-motion estimation (RRE, RTE)
  semantic: False # Compute evaluation metrics for background segmentation (Precision, Recall)
